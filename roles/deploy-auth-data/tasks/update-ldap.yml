---

- name: "install openldap-clients software"
  dnf: 
    name: [ 'openldap-clients', 'python3-ldap' ]
    state: present

##- name: "find ssh public key files"
##  find:
##    paths: /home
##    patterns: "^id_.*pub$"
##    use_regex: yes
##    file_type: file
##    recurse: yes
##    excludes: "mysql,nginx"
##  register: sshpubkeys_found
##  when: inventory_hostname in groups['sssd_client']
##  tags:
##    - add-publickey-ldap

##- name: "fetch pub keys" 
##  fetch:
##    src: "{{ item.path }}"
##    dest: /tmp/fetched
##  loop: "{{ sshpubkeys_found.files }}"
##  when: inventory_hostname in groups['sssd_client']

#- name: "debug sshpubkeys_found"
#  debug: 
#    msg: "{{ item }}"
#  loop: "{{ sshpubkeys_found.files }}"

#### tried using slurp, but no easy to get file owner; no stat of file(s) during slurp 
#- name: "get content of remote file"
#  slurp:
#    src: "{{ item.path }}"
#  loop: "{{ sshpubkeys_found.files }}"
#  register: sshpubkeys_content

#- name: "output sshpubkeys_content"
#  debug: msg="{{ item }}"
#  loop: "{{ sshpubkeys_content.results }}"

      
### ldap_entry can't get used to update an existing ldap entry
### can only be used to initially create ldap entry
#- name: "add user public keys to ldap"
#  ldap_entry:
#    dn: "uid={{ item.pw_name }},ou=People,{{ ldap_search_base }}"
#    objectClass:
#      - ldapPublicKey
#    attributes:
#      sshPublicKey: "{{ item.content | b64decode | trim }}"
#    bind_dn: "{{ ldap_auth.bind_dn }}"
#    bind_pw: "{{ ldap_auth.bind_pw }}"
#    server_uri: "{{ ldap_uri_host }}"
#  loop: "{{ sshpubkeys_content.results }}"
#  delegate_to: testdev2
#  tags:
#    - add-publickey-ldap
#
######

- name: "find fetched ssh public key files"
  find:
    paths: /tmp/fetched/pubkeys
    patterns: "^id_.*pub$"
    use_regex: yes
    file_type: file
    recurse: yes
    excludes: "mysql,nginx"
  register: sshpubkeys_found
  delegate_to: localhost
  become: no
  tags:
    - add-publickey-ldap
    - check-local-pubkeys

- name: "debug sshpubkeys_found" 
  debug:
    msg: "{{ item.path | split('/') }} "
  loop: "{{ sshpubkeys_found.files }}"
  register: sshpubkeys_split
  delegate_to: localhost
  tags:
    - check-local-pubkeys


## despite delegate_to set to a remote host, the lookup filter 
## is checking local /tmp/fetched directory on the control node (where ansible playbook is run);
## lookup filter only works on localhost where playbook is run;
## 
## the following assumes ldapPublicKey objectlass has been added to user entries (this assumes schema supports use of objectlass)
##
## "pw_name" is username of file owner of item in sshpubkeys_found.files
- name: "add user public keys to ldap"
  ldap_attrs:
    dn: "uid={{ item.pw_name }},ou=People,{{ ldap_search_base }}"
    attributes:
      ##sshPublicKey: "{{ lookup('file', '/tmp/fetched/pubkeys/testdev2' + item.path) }}"
      sshPublicKey: "{{ lookup('file', '{{ item.path }}') }}"
    bind_dn: "{{ ldap_auth.bind_dn }}"
    bind_pw: "{{ ldap_auth.bind_pw }}"
  loop: "{{ sshpubkeys_found.files }}"
  delegate_to: testdev1
  tags:
    - add-publickey-ldap

- name: "remove fetched public keys"
  file:
    path: /tmp/fetched/pubkeys
    state: absent
  connection: local
  become: no
  vars:
    ansible_python_interpreter: /opt/homebrew/bin/python3
  tags:
    - add-publickey-ldap




